{"version":3,"file":"static/js/323.75f31c58.chunk.js","mappings":"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","sources":["webpack://shoply-1/./src/components/UI/Alert.module.css?a19e","components/UI/Alert.js","webpack://shoply-1/./src/components/ItemViewer/ItemCollapse.module.css?5279","components/ItemViewer/ItemCollapse.js","webpack://shoply-1/./src/components/ItemViewer/inputs/ItemColor.module.css?f304","components/ItemViewer/inputs/ItemColor.js","webpack://shoply-1/./src/components/ItemViewer/inputs/ItemSize.module.css?0c37","components/ItemViewer/inputs/itemSize.js","webpack://shoply-1/./src/components/ItemViewer/ItemCarousel.module.css?ef34","components/ItemViewer/ItemCarousel.js","webpack://shoply-1/./src/components/ItemViewer/ItemViewerContent.module.css?e251","components/ItemViewer/ItemViewerContent.js","webpack://shoply-1/./src/components/ItemViewer/ItemViewer.module.css?5c33","components/ItemViewer/ItemViewer.js","hooks/use-http.js","lib/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Alert_backdrop__9AnQJ\",\"modal\":\"Alert_modal__8tTQ7\",\"slide-down\":\"Alert_slide-down__yYTt8\",\"content\":\"Alert_content__+z3br\",\"icon-success\":\"Alert_icon-success__FiVDa\",\"icon\":\"Alert_icon__Jyh55\"};","import React from 'react'\r\n\r\nimport classes from './Alert.module.css'\r\n\r\n\r\nconst Alert = (props) => {\r\n    return (\r\n        <div className={classes.modal}>\r\n            <div className={classes.content}>\r\n                <div className={classes['icon-success']}>\r\n                    <div className={classes.icon}>\r\n                        {props.icon}\r\n                    </div>\r\n                </div>\r\n                <p>{props.label}</p>\r\n                {/* <p>{props.children}</p> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","// extracted by mini-css-extract-plugin\nexport default {\"panel\":\"ItemCollapse_panel__VuHod\",\"collapse\":\"ItemCollapse_collapse__bnd9O\"};","import React from 'react'\r\n\r\nimport { Collapse } from 'antd'\r\nimport { AiOutlinePlus, AiOutlineMinus } from 'react-icons/ai'\r\nimport 'antd/dist/antd.min.css'\r\n\r\nimport classes from './ItemCollapse.module.css'\r\n\r\nconst ItemCollapse = (props) => {\r\n    const { item } = props\r\n\r\n    const { Panel } = Collapse\r\n\r\n    const transformedPayment = []\r\n\r\n    for (const key in item.payment) {\r\n        const itemObj = {\r\n            id: key,\r\n            ...item.payment[key],\r\n        }\r\n        transformedPayment.push(itemObj)\r\n    }\r\n\r\n    const paymentMethod = transformedPayment.map((payment) => {\r\n        return <li key={payment.id}>{payment.payment_method}</li>\r\n    })\r\n\r\n    return (\r\n        <Collapse\r\n            className={classes.collapse}\r\n            accordion\r\n            expandIconPosition={'right'}\r\n            expandIcon={({ isActive }) =>\r\n                isActive ? <AiOutlineMinus /> : <AiOutlinePlus />\r\n            }\r\n        >\r\n            <Panel className={classes.panel} header=\"Product Info\" key=\"1\">\r\n                <p className=\"sp subtitle\">{item.description}</p>\r\n            </Panel>\r\n            <Panel className={classes.panel} header=\"Delivery\" key=\"2\">\r\n                <p className=\"sp subtitle\">\r\n                    Expected Delivery Time: 3 - 7 days\r\n                </p>\r\n            </Panel>\r\n            <Panel className={classes.panel} header=\"Payment Method\" key=\"3\">\r\n                <ul>{paymentMethod}</ul>\r\n            </Panel>\r\n        </Collapse>\r\n    )\r\n}\r\n\r\nexport default ItemCollapse\r\n","// extracted by mini-css-extract-plugin\nexport default {\"radio-color\":\"ItemColor_radio-color__GV8dC\",\"radio-container\":\"ItemColor_radio-container__tL35s\",\"radio\":\"ItemColor_radio__tbglp\",\"radio-selected\":\"ItemColor_radio-selected__UhdC5\"};","import React from 'react'\r\n\r\nimport classes from './ItemColor.module.css'\r\n\r\nconst ItemColor = (props) => {\r\n    const selectColorHandler = (color) => {\r\n        props.onSelectColor(color)\r\n    }\r\n\r\n    const colorList = props.colors.map((color) => {\r\n        // console.log(props.selectedColor === color.color)\r\n        return (\r\n            <div key={color.id}>\r\n                <div\r\n                    className={classes['radio-container']}\r\n                    style={\r\n                        props.selectedColor.id === color.id.toString()\r\n                            ? {\r\n                                  backgroundColor: '#fff',\r\n                                  border: `2px solid ${\r\n                                      color.color === 'white' ||\r\n                                      color.color === '#fff'\r\n                                          ? '#00000095'\r\n                                          : '#00000095'\r\n                                  }`,\r\n                              }\r\n                            : {}\r\n                    }\r\n                >\r\n                    <button\r\n                        className={\r\n                            props.selectedColor.id === color.id.toString()\r\n                                ? classes['radio-selected']\r\n                                : classes['radio']\r\n                        }\r\n                        onClick={selectColorHandler.bind(null, color)}\r\n                        style={\r\n                            props.selectedColor.id === color.id.toString()\r\n                                ? {\r\n                                      border: `1px solid #ccc`,\r\n                                      backgroundColor: `${color.color}`,\r\n                                  }\r\n                                : {\r\n                                      border: `1px solid #ccc`,\r\n                                      backgroundColor: `${color.color}`,\r\n                                  }\r\n                        }\r\n                    ></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return <div className={classes['radio-color']}>{colorList}</div>\r\n}\r\n\r\nexport default ItemColor\r\n","// extracted by mini-css-extract-plugin\nexport default {\"chip__selected\":\"ItemSize_chip__selected__JWu5v\",\"chip\":\"ItemSize_chip__2x2Mv\"};","import React from 'react'\r\n\r\nimport Chip from '@mui/material/Chip'\r\n\r\nimport classes from './ItemSize.module.css'\r\n\r\nconst itemSizes = (props) => {\r\n    const { size } = props\r\n\r\n    const chipClass =\r\n        props.selected.id === size.id ? classes['chip__selected'] : classes.chip\r\n\r\n    return (\r\n        <Chip\r\n            className={chipClass}\r\n            label={size.size}\r\n            variant=\"outlined\"\r\n            onClick={props.selectSize.bind(null, size)}\r\n            clickable\r\n        />\r\n    )\r\n}\r\n\r\nexport default itemSizes\r\n","// extracted by mini-css-extract-plugin\nexport default {\"carousel\":\"ItemCarousel_carousel__QH+fX\",\"carousel-item\":\"ItemCarousel_carousel-item__ozikW\",\"fill\":\"ItemCarousel_fill__TbFHe\",\"wrapper\":\"ItemCarousel_wrapper__L2uU4\"};","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nimport classes from './ItemCarousel.module.css'\r\n\r\nconst ItemCarousel = (props) => {\r\n    const { item } = props\r\n\r\n    const transformedPreviews = []\r\n\r\n    for (const key in item.previews) {\r\n        const itemObj = {\r\n            id: key,\r\n            ...item.previews[key],\r\n        }\r\n        transformedPreviews.push(itemObj)\r\n    }\r\n\r\n    const carouselItems = transformedPreviews.map((preview) => {\r\n        return (\r\n            <Carousel.Item\r\n                key={preview.id}\r\n                className={classes['carousel-item']}\r\n            >\r\n                <div className={classes['fill']}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={preview.preview_image}\r\n                        alt=\"previews\"\r\n                    />\r\n                </div>\r\n            </Carousel.Item>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Carousel variant=\"dark\" touch=\"true\" className={classes.carousel}>\r\n            <Carousel.Item className={classes['carousel-item']}>\r\n                {/* <div className={classes.leftOpacity}></div>\r\n                <div className={classes.rightOpacity}></div> */}\r\n                <div className={classes['fill']}>\r\n                    <img src={item.image} alt=\"\" />\r\n                </div>\r\n            </Carousel.Item>\r\n\r\n            {carouselItems}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ItemCarousel\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main-content\":\"ItemViewerContent_main-content__acbz1\",\"error\":\"ItemViewerContent_error__IumD6\",\"items-appear\":\"ItemViewerContent_items-appear__FtnY7\",\"link\":\"ItemViewerContent_link__Nsf6E\",\"link-text\":\"ItemViewerContent_link-text__7LTQr\",\"link-content\":\"ItemViewerContent_link-content__sc3vB\",\"icon\":\"ItemViewerContent_icon__OZ3A3\",\"col1\":\"ItemViewerContent_col1__f9E8d\",\"price\":\"ItemViewerContent_price__sbJOH\",\"col2\":\"ItemViewerContent_col2__JQ+zJ\",\"col3\":\"ItemViewerContent_col3__rG+bk\",\"radio-color\":\"ItemViewerContent_radio-color__cNLis\"};","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { cartActions } from '../store/slices/cart'\r\nimport { sendCartData } from '../store/actions/cart-action'\r\n\r\nimport { useNavigate, Link } from 'react-router-dom'\r\n\r\nimport { BsArrowLeft } from 'react-icons/bs'\r\n\r\nimport ItemCollapse from './ItemCollapse'\r\n\r\nimport ItemColor from './inputs/ItemColor'\r\nimport ItemSize from './inputs/itemSize'\r\nimport ItemCarousel from './ItemCarousel'\r\n\r\nimport PrimaryButton from '../UI/PrimaryButton'\r\n\r\nimport Stack from '@mui/material/Stack'\r\n\r\nimport classes from './ItemViewerContent.module.css'\r\n\r\nlet isInitial = true\r\n\r\nconst ItemViewerContent = (props) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    const { item } = props\r\n\r\n    const [selectedSize, setSelectedSize] = useState({})\r\n    const [selectedColor, setSelectedColor] = useState({})\r\n\r\n    const [hasChosenSize, setHasChosenSize] = useState('')\r\n    const [hasChosenColor, setHasChosenColor] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const selectSizeHandler = (size) => {\r\n        setSelectedSize(size)\r\n    }\r\n\r\n    const selectColorHandler = (color) => {\r\n        setSelectedColor(color)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isInitial) {\r\n            isInitial = false\r\n            return\r\n        }\r\n\r\n        if (cart.changed) {\r\n            dispatch(sendCartData(cart))\r\n        }\r\n    }, [cart, dispatch])\r\n\r\n    const addToCartHandler = () => {\r\n        const cartItemID =\r\n            item.id.toString() + selectedSize.id + selectedColor.id\r\n        // console.log('New ID is ', cartItemID)\r\n\r\n        const colorLen = Object.keys(item.colors).length\r\n        if (colorLen > 0) {\r\n            if (!selectedSize.size) {\r\n                setHasChosenSize('none')\r\n            } else {\r\n                setHasChosenSize('has')\r\n            }\r\n            if (!selectedColor.color) {\r\n                setHasChosenColor('none')\r\n            } else {\r\n                setHasChosenColor('has')\r\n            }\r\n            if (selectedSize.size && selectedColor.color) {\r\n                dispatch(\r\n                    cartActions.add({\r\n                        id: cartItemID,\r\n                        itemid: props.item.id,\r\n                        name: props.item.name,\r\n                        price: props.item.price,\r\n                        quantity: 1,\r\n                        // image: props.item.image,\r\n                        image: selectedColor.color_itemimage,\r\n                        color: selectedColor.color,\r\n                        size: selectedSize.size,\r\n                    })\r\n                )\r\n\r\n                props.onShowAlert()\r\n            }\r\n        }\r\n\r\n        if (colorLen === 0) {\r\n            if (!selectedSize) {\r\n                setHasChosenSize('none')\r\n            } else {\r\n                setHasChosenSize('has')\r\n            }\r\n            if (selectedSize.size) {\r\n                dispatch(\r\n                    cartActions.add({\r\n                        id: cartItemID,\r\n                        itemid: props.item.id,\r\n                        name: props.item.name,\r\n                        price: props.item.price,\r\n                        quantity: 1,\r\n                        image: props.item.image,\r\n                        // image: selectedColor.color_itemimage,\r\n                        color: 'Basic',\r\n                        size: selectedSize.size,\r\n                    })\r\n                )\r\n\r\n                props.onShowAlert()\r\n            }\r\n        }\r\n    }\r\n\r\n    const transformedSizes = []\r\n    for (const key in item.sizes) {\r\n        const itemObj = {\r\n            id: key,\r\n            ...item.sizes[key],\r\n        }\r\n        transformedSizes.push(itemObj)\r\n    }\r\n\r\n    const sizeList = transformedSizes.map((size) => {\r\n        return (\r\n            <ItemSize\r\n                selected={selectedSize}\r\n                key={size.id}\r\n                size={size}\r\n                selectSize={selectSizeHandler}\r\n            />\r\n        )\r\n    })\r\n\r\n    const transformedColors = []\r\n    for (const key in item.colors) {\r\n        const itemObj = {\r\n            id: key,\r\n            ...item.colors[key],\r\n        }\r\n        transformedColors.push(itemObj)\r\n    }\r\n\r\n    return (\r\n        <div className={classes['main-content']}>\r\n            <Link to=\"/\" className={classes.link}>\r\n                <div className={classes['link-content']}>\r\n                    <BsArrowLeft\r\n                        className={classes.icon}\r\n                        onClick={() => navigate(-1)}\r\n                    />\r\n                    <p className={classes['link-text']}> Back </p>\r\n                </div>\r\n            </Link>\r\n            <div className={classes.col1}>\r\n                <div>\r\n                    <h1>{item.name}</h1>\r\n                    <div className={classes.price}>\r\n                        <h5 className={`fw-light`}>\r\n                            PHP{' '}\r\n                            {item.price.toLocaleString(undefined, {\r\n                                minimumFractionDigits: 2,\r\n                            })}\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes['collapse-container']}>\r\n                    <ItemCollapse item={item} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.col2}>\r\n                <ItemCarousel item={item} />\r\n            </div>\r\n            <div className={classes.col3}>\r\n                <div className={classes.chooseContainer}>\r\n                    <h3>Choose Size</h3>\r\n\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                        {sizeList}\r\n                    </Stack>\r\n                    {hasChosenSize === 'none' && (\r\n                        <p className={classes.error}>Please choose your size</p>\r\n                    )}\r\n\r\n                    {Object.keys(props.item.colors).length > 0 && (\r\n                        <Fragment>\r\n                            <h3>Choose Color</h3>\r\n                            <ItemColor\r\n                                className={classes.itemColor}\r\n                                colors={transformedColors}\r\n                                selectedColor={selectedColor}\r\n                                onSelectColor={selectColorHandler}\r\n                            />\r\n\r\n                            {hasChosenColor === 'none' && (\r\n                                <p className={classes.error}>\r\n                                    Please choose color\r\n                                </p>\r\n                            )}\r\n                        </Fragment>\r\n                    )}\r\n                </div>\r\n\r\n                <div className={classes.btnContainer}>\r\n                    <PrimaryButton\r\n                        className={classes.btnAddToCart}\r\n                        width=\"100%\"\r\n                        onClick={addToCartHandler}\r\n                    >\r\n                        {' '}\r\n                        Add to Cart\r\n                    </PrimaryButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemViewerContent\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main-container\":\"ItemViewer_main-container__kyi5B\",\"link\":\"ItemViewer_link__bzJo9\",\"link-content\":\"ItemViewer_link-content__qGsKI\",\"link-text\":\"ItemViewer_link-text__x2kD2\",\"icon\":\"ItemViewer_icon__hYu57\"};","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport useHttp from '../../hooks/use-http'\r\nimport { getItem } from '../../lib/api'\r\n\r\nimport Backdrop from '@mui/material/Backdrop'\r\nimport Alert from '../UI/Alert'\r\nimport { IconContext } from 'react-icons'\r\nimport { BsCheckLg } from 'react-icons/bs'\r\n\r\nimport ItemViewerContent from './ItemViewerContent'\r\n\r\nimport classes from './ItemViewer.module.css'\r\n\r\n\r\nconst ItemViewer = (props) => {\r\n    const { id } = useParams()\r\n\r\n    const [showAlert, setShowAlert] = useState(false)\r\n    const {\r\n        sendRequest,\r\n        status,\r\n        data: loadedItem,\r\n        error,\r\n    } = useHttp(getItem, true)\r\n\r\n    useEffect(() => {\r\n        sendRequest(id)\r\n    }, [sendRequest, id])\r\n\r\n    if (status === 'pending') {\r\n        return 'Loading....'\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error}</p>\r\n    }\r\n\r\n    if (!loadedItem.name) {\r\n        return <p> No ITEM Found </p>\r\n    }\r\n\r\n    const showAlertHandler = () => {\r\n        setShowAlert(true)\r\n    }\r\n    const hideAlertHandler = () => {\r\n        setShowAlert(false)\r\n    }\r\n\r\n    const item = loadedItem\r\n\r\n    const hasItem = item ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop\r\n                sx={{\r\n                    color: '#fff',\r\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\r\n                }}\r\n                open={showAlert}\r\n                onClick={hideAlertHandler}\r\n            >\r\n                <Alert\r\n                    label=\"Added to Cart\"\r\n                    icon={\r\n                        <IconContext.Provider\r\n                            value={{ color: '#7DCB98', size: '18px' }}\r\n                        >\r\n                            <div>\r\n                                <BsCheckLg />\r\n                            </div>\r\n                        </IconContext.Provider>\r\n                    }\r\n                ></Alert>\r\n            </Backdrop>\r\n            <div className={classes['main-container']}>\r\n                {!hasItem && <h1>404</h1>}\r\n                {hasItem && (\r\n                    <ItemViewerContent\r\n                        item={item}\r\n                        onShowAlert={showAlertHandler}\r\n                        onHideAlert={hideAlertHandler}\r\n                    />\r\n                )}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ItemViewer\r\n","import { useReducer, useCallback } from 'react'\r\n\r\nconst httpReducer = (state, action) => {\r\n    if (action.type === 'SEND') {\r\n        return {\r\n            data: null,\r\n            error: null,\r\n            status: 'pending',\r\n        }\r\n    }\r\n    if (action.type === 'SUCCESS') {\r\n        return {\r\n            data: action.responseData,\r\n            error: null,\r\n            status: 'completed',\r\n        }\r\n    }\r\n    if (action.type === 'ERROR') {\r\n        return {\r\n            data: null,\r\n            error: action.errorMessage,\r\n            status: 'completed',\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nconst useHttp = (requestFunction, startWithPending = false) => {\r\n    const [httpState, dispatch] = useReducer(httpReducer, {\r\n        status: startWithPending ? 'pending' : null,\r\n        data: null,\r\n        error: null,\r\n    })\r\n\r\n    const sendRequest = useCallback(\r\n        async (requestData) => {\r\n            dispatch({ type: 'SEND' })\r\n\r\n            try {\r\n                const responseData = await requestFunction(requestData)\r\n                dispatch({ type: 'SUCCESS', responseData })\r\n            } catch (error) {\r\n                dispatch({\r\n                    type: 'ERROR',\r\n                    errorMessage: error.message || 'Something went wrong!',\r\n                })\r\n            }\r\n        },\r\n        [requestFunction]\r\n    )\r\n\r\n    return {\r\n        sendRequest,\r\n        ...httpState,\r\n    }\r\n}\r\n\r\nexport default useHttp\r\n","const FIREBASE_DOMAIN = {\r\n    main: 'https://shoply-25605-default-rtdb.asia-southeast1.firebasedatabase.app/',\r\n    cart: 'https://shoply-25605-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json',\r\n    shop: 'https://shoply-25605-default-rtdb.asia-southeast1.firebasedatabase.app/shop.json',\r\n    collections:\r\n        'https://shoply-25605-default-rtdb.asia-southeast1.firebasedatabase.app/shop/collections.json',\r\n    item_collection1:\r\n        'https://shoply-25605-default-rtdb.asia-southeast1.firebasedatabase.app/shop/collections/item_collection1',\r\n}\r\n\r\nconst { item_collection1 } = FIREBASE_DOMAIN\r\n\r\nexport const getItemCollection = async () => {\r\n    const response = await fetch(`${item_collection1}.json`)\r\n    const data = await response.json()\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Could not fetch items!')\r\n    }\r\n\r\n    const transformedData = []\r\n    for (const key in data) {\r\n        const itemObj = {\r\n            id: key,\r\n            ...data[key],\r\n        }\r\n        transformedData.push(itemObj)\r\n    }\r\n\r\n    return transformedData\r\n}\r\n\r\nexport const getItem = async (itemId) => {\r\n    const response = await fetch(`${item_collection1}/${itemId}.json`)\r\n    const data = await response.json()\r\n\r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Could not fetch this item!')\r\n    }\r\n\r\n    const loadedItem = {\r\n        id: itemId,\r\n        ...data\r\n    }\r\n\r\n    return loadedItem\r\n}\r\n\r\n\r\nexport const addToItemCollection = async (requestData) => {\r\n    const response = await fetch(`${item_collection1}.json`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(requestData),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    })\r\n\r\n    const data = await response.json()\r\n\r\n    if (!response.ok) {\r\n        throw new Error(\r\n            data.message || 'Could not create new item to this collection.'\r\n        )\r\n    }\r\n\r\n    return null\r\n}\r\n"],"names":["props","className","classes","icon","label","item","Panel","Collapse","transformedPayment","key","payment","itemObj","id","push","paymentMethod","map","payment_method","accordion","expandIconPosition","expandIcon","isActive","header","description","selectColorHandler","color","onSelectColor","colorList","colors","style","selectedColor","toString","backgroundColor","border","onClick","bind","size","chipClass","selected","Chip","variant","selectSize","clickable","transformedPreviews","previews","carouselItems","preview","Carousel","src","preview_image","alt","touch","image","isInitial","dispatch","useDispatch","cart","useSelector","state","useState","selectedSize","setSelectedSize","setSelectedColor","hasChosenSize","setHasChosenSize","hasChosenColor","setHasChosenColor","navigate","useNavigate","selectSizeHandler","useEffect","changed","sendCartData","transformedSizes","sizes","sizeList","transformedColors","to","name","price","toLocaleString","undefined","minimumFractionDigits","Stack","direction","spacing","Object","keys","length","Fragment","PrimaryButton","width","cartItemID","colorLen","cartActions","itemid","quantity","color_itemimage","onShowAlert","useParams","showAlert","setShowAlert","useHttp","getItem","sendRequest","status","loadedItem","data","error","hideAlertHandler","hasItem","Backdrop","sx","zIndex","theme","drawer","open","value","onHideAlert","httpReducer","action","type","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","useCallback","requestData","message","item_collection1","getItemCollection","fetch","response","json","ok","Error","transformedData","itemId"],"sourceRoot":""}